// Задача 60. ...

// Сформируйте трёхмерный массив из неповторяющихся двузначных чисел.
// Напишите программу, которая будет построчно выводить массив,
// добавляя индексы каждого элемента.
// Массив размером 2 x 2 x 2
// 66(0,0,0) 25(0,1,0)
// 34(1,0,0) 41(1,1,0)
// 27(0,0,1) 90(0,1,1)
// 26(1,0,1) 55(1,1,1)

//////////////////////////////////////////////////////////////
/// Методы предыдущих занятий
//////////////////////////////////////////////////////////////

// Метод ввода данных
int ReadData(string msg)
{
    System.Console.WriteLine(msg);
    int num = int.Parse(System.Console.ReadLine() ?? "0");
    return num;
}

// Метод вывода результата
void PrintRezult(string msg)
{
    System.Console.WriteLine(msg);
}

//////////////////////////////////////////////////////////////
/// Методы текущего задания 
//////////////////////////////////////////////////////////////

// Метод проверки наличия числа в массиве.
// На вход подаётся массив, число, и счётчик - в пределах которого проверяются элементы.
bool TestNum(int[] array, int num, int count)
{
    for (int i = 0; i < count; i++)
    {
        if (num == array[i])        // Если число совпдает с числом из массива -
            return true;            // метод прерывается и возвращает true
    }
    array[count] = num;             // Если число не совпадает ни с одним значением -
    return false;                   // число добавляется в массив, а метод
                                    // возвращает false
}

// Метод заполнения массива случайными неповторяющимися числами
int[,,] Fill3DArrayNonRepeat(int x, int y, int z, int lowBorder, int highBorder)
{
    System.Random rnd = new System.Random();

    int[,,] array3D = new int[x, y, z];     // Объявление основного массива
    int[] temp = new int[x * y * z];        // Объявление массива в котором будут содержаться 
                                            // значения контроля повторяемости
    int num;                                // Случайное число
    int count = 0;                          // Счётчик уникальных чисел

    // По идее, здесь нужна проверка, чтобы размеры массивов не превышали количество
    // уникальных чисел которые мы можем сгенерировать (highBorder-lowBorder)

    // Проходим по основному массиву
    for (int i = 0; i < x; i++)
    {
        for (int j = 0; j < y; j++)
        {
            for (int k = 0; k < z; k++)
            {
                num = rnd.Next(lowBorder, highBorder);      // Задаём случайное число

                while (TestNum(temp, num, count))           // Если это число присутствует в 
                {                                           // массиве уникальных чисел -
                    num = rnd.Next(lowBorder, highBorder);  // задаём новое случайное число,
                }                                           // и проходим этот цикл до тех пор
                                                            // пока не сгенерируется число
                                                            // отсутствующее в массиве уникальных чисел

                array3D[i, j, k] = num;                     // Присваиваем уникальное значение массиву
                count++;                                    // Увеличиваем счётчик уникальных чисел
            }
        }
    }

    return array3D;
}


// Метод печати массива
void Print3DArray(int[,,] matrix)
{
    for (int i = 0; i < matrix.GetLength(0); i++)
    {
        for (int j = 0; j < matrix.GetLength(1); j++)
        {
            for (int k = 0; k < matrix.GetLength(2); k++)
            {
                System.Console.Write(matrix[i, j, k] + "({0},{1},{2}) \t", i, j, k);
            }
            System.Console.WriteLine();
        }
    }
}

//////////////////////////////////////////////////////////////
/// Тело программы
//////////////////////////////////////////////////////////////


int x = ReadData("Введите размер матрицы X*X*X: ");
int[,,] matrixA = Fill3DArrayNonRepeat(x, x, x, 10, 100);

PrintRezult("Вывод матрицы: ");
Print3DArray(matrixA);