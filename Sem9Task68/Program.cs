// Задача 68:

// Напишите программу вычисления функции Аккермана с помощью
// рекурсии. Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29

//////////////////////////////////////////////////////////////
/// Методы предыдущих занятий
//////////////////////////////////////////////////////////////

// Метод ввода данных
int ReadData(string msg)
{
    System.Console.WriteLine(msg);
    int num = int.Parse(System.Console.ReadLine() ?? "0");
    return num;
}

// Метод вывода результата
void PrintRezult(string msg)
{
    System.Console.WriteLine(msg);
}

//////////////////////////////////////////////////////////////
/// Методы текущего задания 
//////////////////////////////////////////////////////////////

// Ингве Сундблад, в 1971 году начал использовать функцию A(3,n) 
// для сравнения различных языков программирования. При вычислении 
// A(3,n) происходит около 4^{n+1} вложенных вызовов.
// В то время (в 1971 году, наверно) максимально возможное
// значение n было равно 1. Сейчас в языке Java 1.4.2 со
// стандартными настройками памяти максимальное допустимое
// значение n=13. цит. https://ru.wikipedia.org/wiki/Функция_Аккермана

// В данном случае (у меня покрайней мере) считалось до n=11
// без переполнения буфера

// функция Аккермана
int Akk(int m, int n)
{
    if (m == 0)
        return n + 1;
    else
        if ((m != 0) && (n == 0))
        return Akk(m - 1, 1);
    else
        return Akk(m - 1, Akk(m, n - 1));
}

//////////////////////////////////////////////////////////////
/// Тело программы
//////////////////////////////////////////////////////////////

int m = ReadData("Введите параметр M : ");
int n = ReadData("Введите параметр N : ");

PrintRezult("M = " + m + ", N = " + n + "-> A(m,n) = " + Akk(m, n));